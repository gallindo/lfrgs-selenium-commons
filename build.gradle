plugins {
    id "com.jfrog.bintray" version "1.+"
    id "de.undercouch.download" version "3.1.2"
    id "com.gradle.plugin-publish" version "0.11.0"
    id "org.sonarqube" version "2.7"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "com.gradle.plugin-publish"

dependencies {
    compile gradleApi()
    compile localGroovy()
}

repositories {
  jcenter()
  mavenCentral()
  mavenLocal()
}

description = """Selenium Commons Framework"""

// Version X.Y.Z = X, When changing the API
// Version X.Y.Z = Y, When adding features while maintaining compatibility
// Version X.Y.Z = Z, When to fix failures while maintaining compatibility
version = '4.0.0'
group = 'com.selenium.commons'
// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

// A custom task to show report on tests that have run
task viewResults(dependsOn: ['test'] , type:Exec) {
		workingDir './build/reports/tests'
		commandLine 'cmd', '/c', 'start index.html'
}


publishing {
	publications {
	    mavenJava(MavenPublication) {
    		from components.java
				artifact sourcesJar
            	artifact javadocJar
        }
	}
}

ext.junitVersion = '5.6.2'
ext.junitRunnerVersion = '1.6.2'
ext.rerunnerJunitVersion = '2.1.6'
ext.seleniumVersion = '4.0.0-alpha-6'

dependencies {
	compile group: 'org.junit.jupiter', name: 'junit-jupiter', version:junitVersion
	compile group: 'org.junit.platform', name: 'junit-platform-runner', version:junitRunnerVersion
	compile group: 'io.github.artsok', name: 'rerunner-jupiter', version:rerunnerJunitVersion
	compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version:seleniumVersion
	compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version:seleniumVersion
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:seleniumVersion
	compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version:seleniumVersion
	compile group: 'org.seleniumhq.selenium', name: 'selenium-support', version:seleniumVersion
}

pluginBundle {
  website = 'https://github.com/manoelcyreno/selenium-commons'
  vcsUrl = 'https://github.com/manoelcyreno/selenium-commons'
  description = 'Selenium framework for web projects!'
  tags = ['frw-selenium-commons', 'test', 'selenium', 'liferay', 'funtionaltest', 'BDD', 'aceptancetest']

  plugins {
    seleniumCommonsPlugin {
      id = 'com.selenium.commons.testFramework'
      displayName = 'Selenium Commons Framework'
    }
  }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'frw-selenium-commons'
        desc = 'Common Selenium framework'
		licenses = ['Apache-2.0']
		userOrg = System.getenv('BINTRAY_USER')
        labels = ['frw-selenium-commons', 'test', 'selenium', 'liferay']
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        vcsUrl = 'https://github.com/manoelcyreno/selenium-commons'
        
        githubRepo = 'manoelcyreno/selenium-commons' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        
        version {
            name = project.version
            desc = 'Common Selenium framework'
            released  = new Date()
            vcsTag = project.version
            attributes = ['gradle-plugin': 'gradle.plugin.com.selenium.commons.testFramework:frw-selenium-commons']
        }
    }
}